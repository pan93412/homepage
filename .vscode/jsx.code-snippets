{
  "Component Props": {
    "scope": "typescriptreact, javascriptreact",
    "prefix": "cp",
    "body": [
      "/**",
      " * The props of {@link ${1}}",
      " */",
      "export interface ${1}Props {",
      "  $0",
      "}"
    ],
    "description": "Create a props interface for a component."
  },
  "Component": {
    "scope": "typescriptreact, javascriptreact",
    "prefix": "cc",
    "body": [
      "/**",
      " * $2",
      " */",
      "export function $1(props: ${1}Props) {",
      "  $0",
      "}"
    ],
    "description": "Create a component."
  },
  "Component (Internal)": {
    "scope": "typescriptreact, javascriptreact",
    "prefix": "cci",
    "body": [
      "/**",
      " * $2",
      " *",
      " * @internal",
      " */",
      "export function $1(props: ${1}Props) {",
      "  $0",
      "}"
    ],
    "description": "Create an internal component."
  },
  "ClassNameWrapper": {
    "scope": "typescriptreact, javascriptreact",
    "prefix": "cw",
    "body": [
      "import cx from 'classix';",
      "",
      "/**",
      " * $3",
      " */",
      "export function $1({ className, ...props }: React.ComponentPropsWithoutRef<'${2}'>) {",
      "  return (",
      "    <$2 className={cx(className, '$0')} {...props} />",
      "  );",
      "}"
    ],
    "description": "Create a wrapper component that only have the class name changes."
  },
  "ClassNameWrapper (Internal)": {
    "scope": "typescriptreact, javascriptreact",
    "prefix": "cwi",
    "body": [
      "import cx from 'classix';",
      "",
      "/**",
      " * $3",
      " *",
      " * @internal",
      " */",
      "export function $1({ className, ...props }: React.ComponentPropsWithoutRef<'${2}'>) {",
      "  return (",
      "    <$2 className={cx(className, '$0')} {...props} />",
      "  );",
      "}"
    ],
    "description": "Create a internal wrapper component that only have the class name changes."
  }
}
